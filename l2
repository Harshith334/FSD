package com.example.demospringjdbc;



import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.jdbc.core.JdbcTemplate;

import org.springframework.web.bind.annotation.RestController;

import org.springframework.web.bind.annotation.RequestMapping;



@RestController

public class springboot {



    @Autowired

    JdbcTemplate jdbcTemplate;



    @RequestMapping("/insert")

    public String index() {

        jdbcTemplate.execute("INSERT INTO  Tables_in_vijay(Rollno, Branch, section) VALUES ('mac')");

        return "Data inserted successfully";

    }

}





/////







<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>

		<groupId>org.springframework.boot</groupId>

		<artifactId>spring-boot-starter-parent</artifactId>

		<version>3.2.5</version>

		<relativePath/> <!-- lookup parent from repository -->

	</parent>

	<groupId>com.example</groupId>

	<artifactId>demospringjdbc</artifactId>

	<version>0.0.1-SNAPSHOT</version>

	<name>demospringjdbc</name>

	<description>Demo project for Spring Boot</description>

	<properties>

		<java.version>17</java.version>

	</properties>

	<dependencies>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-web</artifactId>

			

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-data-jdbc</artifactId>

			<version>3.2.5</version>

			

		</dependency>

		<dependency>

    <groupId>mysql</groupId>

    <artifactId>mysql-connector-java</artifactId>

    <version>8.0.24</version>

</dependency>



		<dependency>

			<groupId>com.mysql</groupId>

			<artifactId>mysql-connector-j</artifactId>

			<scope>runtime</scope>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-test</artifactId>

			<scope>test</scope>

		</dependency>

	</dependencies>



	<build>

		<plugins>

			<plugin>

				<groupId>org.springframework.boot</groupId>

				<artifactId>spring-boot-maven-plugin</artifactId>

			</plugin>

		</plugins>

	</build>



</project>



//////





spring.datasource.url=Jdbc:mysql://localhost:3306/vijay

spring.datasource username=root

spring.datasource.password=root

spring.datasource-driver-class_name=com.mysql.cj.jdbc.Driver



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Webpage</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        
        #message {
            font-size: 24px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="message" onclick="changeColor()">Hello, World!</div>

    <script>
        function changeColor() {
            var message = document.getElementById('message');
            message.style.color = 'red'; // Change to any color you like
        }
    </script>
</body>
</html>

///////////
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Star Rating System</title>
<style>
  .rating span {
    cursor: pointer;
  }

</style>
</head>
<body>
///////////////////
import React, { useState } from 'react';

function LoginForm() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [loggedIn, setLoggedIn] = useState(false);

  const handleLogin = (e) => {
    e.preventDefault();
    // Your login logic here (e.g., calling an API)
    if (username === 'user' && password === 'password') {
      setLoggedIn(true);
      alert('Login successful!');
    } else {
      alert('Invalid username or password!');
    }
  };

  return (
    <div>
      {loggedIn ? (
        <div>Welcome, {username}!</div>
      ) : (
        <form onSubmit={handleLogin}>
          <label>
            Username:
            <input type="text" value={username} onChange={(e) => setUsername(e.target.value)} />
          </label>
          <br />
          <label>
            Password:
            <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
          </label>
          <br />
          <button type="submit">Login</button>
        </form>
      )}
    </div>
  );
}

export default LoginForm;


///////////
import React, { useState } from 'react';

function RegistrationForm() {
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    // Your registration logic here (e.g., calling an API)
    console.log('Registration submitted:', { username, email, password });
    alert('Registration successful!');
    // Reset form fields
    setUsername('');
    setEmail('');
    setPassword('');
    setConfirmPassword('');
  };

  return (
    <div>
      <h2>Registration Form</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Username:</label>
          <input type="text" value={username} onChange={(e) => setUsername(e.target.value)} required />
        </div>
        <div>
          <label>Email:</label>
          <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} required />
        </div>
        <div>
          <label>Password:</label>
          <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} required />
        </div>
        <div>
          <label>Confirm Password:</label>
          <input type="password" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />
        </div>
        <button type="submit">Register</button>
      </form>
    </div>
  );
}

export default RegistrationForm;

//////////////

<div class="rating">
  <span onclick="rate(1)">&#9733;</span>
  <span onclick="rate(2)">&#9733;</span>
  <span onclick="rate(3)">&#9733;</span>
  <span onclick="rate(4)">&#9733;</span>
  <span onclick="rate(5)">&#9733;</span>
</div>

<script>
function rate(stars) {
  alert('You rated ' + stars + ' stars.');
}
</script>

</body>
</html>

